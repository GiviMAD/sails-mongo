//  ██████╗ ███████╗██████╗ ██╗      █████╗  ██████╗███████╗
//  ██╔══██╗██╔════╝██╔══██╗██║     ██╔══██╗██╔════╝██╔════╝
//  ██████╔╝█████╗  ██████╔╝██║     ███████║██║     █████╗
//  ██╔══██╗██╔══╝  ██╔═══╝ ██║     ██╔══██║██║     ██╔══╝
//  ██║  ██║███████╗██║     ███████╗██║  ██║╚██████╗███████╗
//  ╚═╝  ╚═╝╚══════╝╚═╝     ╚══════╝╚═╝  ╚═╝ ╚═════╝╚══════╝
//
//  ███████╗████████╗██████╗ ██╗███╗   ██╗ ██████╗ ███████╗    ██╗    ██╗██╗████████╗██╗  ██╗
//  ██╔════╝╚══██╔══╝██╔══██╗██║████╗  ██║██╔════╝ ██╔════╝    ██║    ██║██║╚══██╔══╝██║  ██║
//  ███████╗   ██║   ██████╔╝██║██╔██╗ ██║██║  ███╗███████╗    ██║ █╗ ██║██║   ██║   ███████║
//  ╚════██║   ██║   ██╔══██╗██║██║╚██╗██║██║   ██║╚════██║    ██║███╗██║██║   ██║   ██╔══██║
//  ███████║   ██║   ██║  ██║██║██║ ╚████║╚██████╔╝███████║    ╚███╔███╔╝██║   ██║   ██║  ██║
//  ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝     ╚══╝╚══╝ ╚═╝   ╚═╝   ╚═╝  ╚═╝
//
//   ██████╗ ██████╗      ██╗███████╗ ██████╗████████╗    ██╗██████╗ ███████╗
//  ██╔═══██╗██╔══██╗     ██║██╔════╝██╔════╝╚══██╔══╝    ██║██╔══██╗██╔════╝
//  ██║   ██║██████╔╝     ██║█████╗  ██║        ██║       ██║██║  ██║███████╗
//  ██║   ██║██╔══██╗██   ██║██╔══╝  ██║        ██║       ██║██║  ██║╚════██║
//  ╚██████╔╝██████╔╝╚█████╔╝███████╗╚██████╗   ██║       ██║██████╔╝███████║
//   ╚═════╝ ╚═════╝  ╚════╝ ╚══════╝ ╚═════╝   ╚═╝       ╚═╝╚═════╝ ╚══════╝
//

var _ = require('@sailshq/lodash');
var ObjectID = require('mongodb').ObjectID;

module.exports = function parseObjectIds(val) {
  if (!_.isString(val)) {
    return val;
  }

  // Check if the value is a mongo id
  try {
    var objectified = new ObjectID(val);

    // If the objectified is equal to the value then it's a mongo id. This works
    // because when a valid ObjectID is created it's preserved.
    if (objectified.toString() === val) {
      return objectified;
    }

    return val;
  } catch (e) {
    return val;
  }
};
